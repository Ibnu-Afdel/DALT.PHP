#!/usr/bin/env php
<?php

$arguments = $argv;

function load_env_and_boot(): array {
    define('BASE_PATH', __DIR__ . '/');
    require BASE_PATH . 'framework/Core/functions.php';
    require base_path('vendor/autoload.php');
    $dotenv = Dotenv\Dotenv::createImmutable(base_path(''));
    $dotenv->load();
    $dbConfig = require base_path('config/database.php');
    return $dbConfig;
}

if (count($arguments) < 2) {
    echo "Usage: php artisan <command>\n";
    echo "Available commands:\n";
    echo "  serve [host] [port]     - Start development server\n";
    echo "  migrate                 - Run migrations\n";
    echo "  migrate:fresh           - Drop DB (sqlite) and run migrations\n";
    echo "  make:migration <name>   - Create a new migration\n";
    echo "  example:install auth    - Copy auth demo into app and add routes\n";
    exit(1);
}

// Bootstrap core for all commands so helpers like base_path() exist
// (harmless for commands that don't need env)
$dbConfigBoot = load_env_and_boot();

$command = $arguments[1];

switch ($command) {
    case 'serve':
        $host = $arguments[2] ?? '127.0.0.1';
        $port = $arguments[3] ?? '8000';
        echo "Starting development server: http://{$host}:{$port}\n";
        passthru("php -S {$host}:{$port} -t public");
        break;

    case 'migrate':
        $dbConfig = $dbConfigBoot;
        $database = new Core\Database($dbConfig['database']);
        $migration = new Core\Migration($database);
        $migration->runMigrations();
        echo "Migration process completed.\n";
        break;

    case 'migrate:fresh':
        $dbConfig = $dbConfigBoot;
        echo "Running migrate:fresh...\n";
        if (($dbConfig['database']['driver'] ?? 'sqlite') === 'sqlite') {
            $dbPath = $dbConfig['database']['database'];
            if (file_exists($dbPath)) {
                unlink($dbPath);
                echo "Dropped existing database file.\n";
            }
        } else {
            echo "Warning: migrate:fresh for non-SQLite databases not implemented yet.\n";
        }
        $database = new Core\Database($dbConfig['database']);
        $migration = new Core\Migration($database);
        $migration->runMigrations();
        echo "Fresh migration completed.\n";
        break;

    case 'make:migration':
        if (!isset($arguments[2])) {
            echo "Usage: php artisan make:migration <table_name>\n";
            exit(1);
        }
        $tableName = preg_replace('/^create_/', '', $arguments[2]);
        $tableName = preg_replace('/_table$/', '', $tableName);
        $migrationFileName = date('YmdHis') . "_create_{$tableName}_table.php";
        $migrationFilePath = __DIR__ . "/database/migrations/$migrationFileName";
        if (!is_dir(__DIR__ . '/database/migrations')) {
            mkdir(__DIR__ . '/database/migrations', 0755, true);
        }
        $template = <<<'EOD'
<?php

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Capsule\Manager as Capsule;

return function () {
    Capsule::schema()->create('%s', function (Blueprint $table) {
        $table->id();
        $table->string('name');
        $table->timestamps();
    });

    echo "Created %s table\n";
};
EOD;
        file_put_contents($migrationFilePath, sprintf($template, $tableName, $tableName));
        echo "Migration created: database/migrations/$migrationFileName\n";
        break;

    case 'example:install':
        $which = $arguments[2] ?? '';
        if ($which !== 'auth') {
            echo "Usage: php artisan example:install auth\n";
            exit(1);
        }
        $source = base_path('framework/examples/auth');
        if (!is_dir($source)) {
            echo "Examples not found.\n";
            exit(1);
        }
        // Copy controllers
        @mkdir(base_path('Http/controllers/session'), 0755, true);
        @mkdir(base_path('Http/controllers/registration'), 0755, true);
        foreach (['session/create.php','session/store.php','session/destroy.php','registration/create.php','registration/store.php'] as $file) {
            copy($source . '/Http/controllers/' . $file, base_path('Http/controllers/' . $file));
        }
        // Copy views
        @mkdir(base_path('resources/views/auth'), 0755, true);
        foreach (['auth/login.view.php','auth/register.view.php'] as $file) {
            copy($source . '/resources/views/' . $file, base_path('resources/views/' . $file));
        }
        // Append routes
        $routesPath = base_path('routes/routes.php');
        $routeBlock = "\n// Auth example routes\n"
            . "\$router->get('/register', 'registration/create.php')->only('guest');\n"
            . "\$router->post('/register', 'registration/store.php')->only(['guest','csrf']);\n"
            . "\$router->get('/login', 'session/create.php')->only('guest');\n"
            . "\$router->post('/session', 'session/store.php')->only(['guest','csrf']);\n"
            . "\$router->delete('/session', 'session/destroy.php')->only(['auth','csrf']);\n";
        file_put_contents($routesPath, $routeBlock, FILE_APPEND);
        echo "Auth example installed and routes appended to routes/routes.php.\n";
        break;

    default:
        echo "Unknown command: $command\n";
        echo "Available commands: serve, migrate, migrate:fresh, make:migration, example:install\n";
        exit(1);
}
